@startuml
class SettingsViewModel {
    - _popupAlreadyShown : bool = false
    - _logContent : string
    - _selectedLanguage : string
    + SelectedLanguage : string <<get>> <<set>>
    - CheckBusinessSoftwareRunning(sender:object, e:ElapsedEventArgs) : void
    - _fileToPrioritize : string = ""
    + FileToPrioritize : string <<get>> <<set>>
    - _fileExtensionToCrypt : string = ""
    + FileExtensionToCrypt : string <<get>> <<set>>
    - _currentBusinessSoftware : string = "Aucun"
    + CurrentBusinessSoftware : string <<get>> <<set>>
    + SettingsViewModel(loggerService:LoggerService)
    - OnLogMessageAdded(sender:object, message:string) : void
    + LogContent : string <<get>> <<set>>
    - SetLanguage(language:string) : void
    - AddPriorityFile(parameter:object) : void
    - RemovePriorityFile(priority:string) : void
    - AddExtension(parameter:object) : void
    - RemoveExtension(extension:string) : void
    - BrowseBusinessSoftware(parameter:object) : void
    - UseCalculator(parameter:object) : void
    - ApplySettings(parameter:object) : void
    - LoadRunningProcesses() : void
    - GetProcessFilePath(process:Process) : string
    - LoadSettings() : void
    - SaveSettings() : void
}
class ProcessInfo {
    + Name : string <<get>> <<set>>
    + FullPath : string <<get>> <<set>>
    + <<override>> ToString() : string
}
class "RelayCommand`1"<T> {
    + RelayCommand(execute:Action<T>, canExecute:Predicate<T>)
    + CanExecute(parameter:object) : bool
    + Execute(parameter:object) : void
}
class "ObservableCollection`1"<T> {
}
class "Action`1"<T> {
}
class "Predicate`1"<T> {
}
ViewModelBase <|-- SettingsViewModel
SettingsViewModel --> "_businessPopupWindow" Window
SettingsViewModel --> "_loggerService" LoggerService
SettingsViewModel o-> "_logBuilder" StringBuilder
SettingsViewModel o-> "LogFormats<string>" "ObservableCollection`1"
SettingsViewModel --> "_selectedLogFormat" LogFormat
SettingsViewModel --> "SelectedLogFormat" LogFormat
SettingsViewModel o-> "_priorityFiles<string>" "ObservableCollection`1"
SettingsViewModel --> "PriorityFiles<string>" "ObservableCollection`1"
SettingsViewModel o-> "_extensionsToCrypt<string>" "ObservableCollection`1"
SettingsViewModel --> "ExtensionsToCrypt<string>" "ObservableCollection`1"
SettingsViewModel o-> "_availableProcesses<ProcessInfo>" "ObservableCollection`1"
SettingsViewModel --> "AvailableProcesses<ProcessInfo>" "ObservableCollection`1"
SettingsViewModel --> "_selectedBusinessSoftware" ProcessInfo
SettingsViewModel --> "SelectedBusinessSoftware" ProcessInfo
SettingsViewModel --> "SetLanguageCommand" ICommand
SettingsViewModel --> "AddExtensionCommand" ICommand
SettingsViewModel --> "RemoveExtensionCommand" ICommand
SettingsViewModel --> "BrowseBusinessSoftwareCommand" ICommand
SettingsViewModel --> "UseCalculatorCommand" ICommand
SettingsViewModel --> "ApplySettingsCommand" ICommand
SettingsViewModel --> "AddPriorityFileCommand" ICommand
SettingsViewModel --> "RemovePriorityFileCommand" ICommand
ICommand <|-- "RelayCommand`1"
"RelayCommand`1" --> "_execute<T>" "Action`1"
"RelayCommand`1" --> "_canExecute<T>" "Predicate`1"
@enduml
